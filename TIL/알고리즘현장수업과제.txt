1) 추상화의 의미와 알고리즘과 자료구조의 의미와 이 둘의 관계를 설명하시오.
추상화에서 ‘추상’은 말그대로 형태를 제거하다. 라는 의미이다. 현실에 존재하는 어떠한 대상들을 특징적인 면을 뽑아서 하나의 대표적인 상태로 만들어 내는 것이 추상화라고 생각한다. 예를 들면, 길가에서 움직이는 ‘자동차’를 생각해보자. 지금 당장 집 앞의 자동차를 찾아보면 여러 종류의 자동차들을 볼 수 있다. 소나타, 아반떼, 니로 등등 사람들은 이러한 기계장치를 보고 ‘자동차’라고 이야기한다. 그렇다면 사람들이 생각하는 자동차란 무엇일까?
일단 사람이 타고 다닐 수 있어야 할 것이다. 그리고 핸들을 가지고 있어야하고, 엔진을 통해서 커다란 몸체를 굴려야 할 것이다.
그렇다 열이면 열 각자 생각하고 있는 자동차의 특징들을 하나로 합쳐서 그것에 부합한 것들을 자동차라고 부른다. 지나가던 소나타도 ‘자동차’이고 캐스퍼도 ‘자동차’라는 공통 분모를 가지고 있는 것이다.
내가 생각하는 추상화의 의미는 이러한 공통된 것을 뽑아서 하나의 개념적인 모델링을 진행한 거시 바로 ‘추상화’라고 생각한다.

그렇다면 자료구조의 의미란 무엇일까? 자료구조는 바로 데이터를 담는 틀 또는 저장하는 방법이라고 할 수 있겠다. 프로그램에서 가장 중요한 것중 하나는 바로 데이터이다. 세상을 돌아가게 하는 수많은 프로그램이 곧 데이터를 얼마나 사용자에게 편하고 쉽게 보여주느냐를 의미한다고 생각한다. 

알고리즘이란 무엇일까? 자료구조가 데이터를 담는 틀 또는 틀에 담는 방법에 대해 말한다면, 알고리즘은 이렇게 저장된 값을 토대로 ‘문제를 어떻게하면 빠르고 쉽게 해결할 수 있을지 골머리를 썩는 과정’이라고 생각한다. 세상에는 수 많은 문제들이 존재한다. 이러한 문제를 좀더 빠르게 계산하고 해결해 나가는 과정을 프로그래머들은 수행한다. 하나의 문제를 해결하는데 정답은 하나일지라도 그 정답에 이르는 방법은 여러 가지 이다. 이렇게 주어진 도구(데이터)를 토대로 문제를 어떻게 해결할 지에 대한 방법을 찾는 것이 알고리즘이다.

그렇다면 알고리즘과 자료구조의 관계는 어떤 것일까? 
당신이 지금 당장 한라산에 등반한다고 생각해보자. 목적지는 백록담이다. 같은 장비를 가지고 같은 상황에서 출발을 하는데 누군가는 A루트를 통해서 등반하고 누군가는 B루트를 통해서 등반한다. 나는 이렇게 등반하는 루트를 ‘자료구조’라 생각하고 등반하는 과정을 ‘알고리즘’이라고 생각한다. A루트로 가면 편하게 갈 수 있지만 시간이 오래 걸릴 수 있고 B루트로 가면 어렵지만 빠르게 갈 수 있다고 생각해보자. 이렇게 등반하는 루트(자료구조)에 따라고 원하는 결과치를 다른 방향과 속도로 해결 할 수 있다는 전이 알고리즘과 자료구조의 관계라고 생각한다. 

2) 배열의 정의
배열의 정의 배열이란 여러 가지의 데이터를 순서대로 나열하여 담는 자료구조입니다. 순차적인 접근이 가능하며 내부적으로 순서가 매겨져 있어서 인덱스를 통해 해당 값을 참조할 수 있습니다. 

다음과 같은 희소 행렬이 있다고 합시다.  6X6 배열로 총 36개의 저장 장소가 필요합니다. C언어를 기준으로 저장되는 값을 INT값이라고 가정하였을 때, INT 자료형의 크기는 총 메모리 할당량은 4byte * 6 * 6 = 144byte가 배열을 할당하는데 필요한 값입니다.

   하지만 아래의 값을 할당하고 보니 군데군데 비어있는 부분이 너무나도 많이 존재합니다. 이런 한 값을 압축파일 압축하듯이 크기를 줄여보도록 하겠습니다. 
해당 하는 값들을 하나하나 인덱스를 달아서 라벨링을 해보면 다음과 같은 7개의 배열이 만들어 집니다.
A[0][0] = 1
A[1][0] = 4
A[1][1] = 5
A[2][5] = 8
A[3][0] = 9
A[5][1] = 12
A[5][5] = 15
이렇게 값을 할당하면 INT 2차원 배열 7개만 필요하겠지요?
그렇다면 각각 행/열/값을 넣는 3개의 int값을 담는 배열 7개이므로 3X7X4(int 자료형 크기) = 84Byte
와우!! 144byte ? 84byte = 60byte 의 메모리 공간을 절약할 수 있겠네요!

3) 스택에 대해서 설명한 후
저는 군필자입니다. 공병대대란 곳에서 군생활을 하였는데요 거기서 공병대를 표현할 때 이렇게 표현합니다. ‘First In Last Out’ 말 그대로 가장 먼저 들어가서 가장 나중에 나온다는 말이에요. 제가 이렇게 빌드업 하는 이유는 스택을 설명하기 위해서입니다. 스택은 약간 다릅니다. Last In First Out입니다. 위의 말과 아얘 상반됩니다. 마지막으로 들어가고 첫 번째로 들어가는 것을 뜻합니다. 편의점 가서 둥근 원기둥 모양의 젤리통을 생각해보면 이해가 쉽게 됩니다. 통을 열게 되면 가장 마지막으로 들어간 젤 리가 보입니다. 그 젤리는 원통의 특징 상 가장 늦게 들어갔을 겁니다. 하지만 저의 입속에 가장 빨리 들어가겠지요.

스택은 이러한 자료구조입니다. 특정 자료를 젤리라고 생각했을 때, 가장 나중에 들어간 자료가 가장 먼저 나오는 구조입니다.

이러한 구조를 가지고 234+*의 후위 표현식을 설명해보도록 하겠습니다.
먼저 하나의 스택 자료구조를 준비해둡시다. 그리고 234+*의 포문을 돌리면서 순차적으로 데이터를 처리합니다.

후위 표현식이기 때문에 계산하고자하는 수는 앞에 위치해있고 계산해야할 문자들은 뒤에 분포되어 있을 겁니다.

(234가 stack 에 담겨 있다.)
234는 모두 stack에 담았고 이제 ‘+’를 처리할 차례가 되었습니다.
‘+’는 코드 상 더하는 프로세스로 약속하였으니 아래 else문을 타게 됩니다.
oper2 = 4 가 할당되고 oper1 에는 3이 할당되겠네요. 그리고 두 개의 값을 더한 값인 7을 다시 스택에 담겠습니다.
(47이 stack에 담겨있다.)
다음 for문을 돌려보니 이번에는 *의 차례가 되었네요?
다시 pop pop을 진행하면
oper2  = 7 / oper1 = 2 가 할당이 될 것입니다.
‘*’은 곱하는 걸로 코딩상 약속되었으니 곱샘 로직을 태우겠습니다. 결과값 14을 다시 stack에 담겠습니다. for문은 끝나고 마지막 return 값으로 pop()하게 되니 14가 리턴 되겠군요 


1. 장르영화와 독립영화에 대해 설명하고, 각각의 장·단점에 대해 설명하시오. (15점)
장르영화는 단순화한다. 그리고 장르만 보고도 그 영화의 대한 커다란 아웃라인을 알 수 있다.
예를 들면 로맨스 영화를 본다고 생각하자. 사람들은 로맨스 영화에 대한 커다란 틀을 알 고 있을 것이고
그에 따라서 많은 추측과 예상을 할 수 있을 것이다.
하지만 참신성이 떨어지는 문제는 언제나 존재하였다.

독립영화는 제작사나 투자자들의 자본과 지원을 받지 않고 만드는 영화를 말한다.
아무래도 장르영화의 경우에는 투자자들의 입맛에 맞게 대중성을 띄는 경우가 많다.
하지만 독립영화는 상업 영화 제작에서 존재하는 이윤 창출을 위한 자본의 압력을 배제하고 다양한 예술적인 시도를 할 수 있다는 것에 있다.

2017서울독립영화제에 출품한 '소공녀'라는 영화에서 이를 알 수 있다. 
나는 독립영화의 톡톡튀는 날것의 무언가가 장점이라 생각한다.
자본의 투입이 없기 때문에 배우들의 연기에 많은 의존을 하게 되고, 더더욱 사회의 이모저모를 표현하기 쉽다는 것이 장점이라고 생각한다.

2. 자연언어와 영화언어의 유사성 및 차이에 대해 설명하시오. (15점)

영화는 가공의 세계를 그리고 있으며, 내러티브, 즉 줄거리를 가지고 있다.
영화는 현실을 재현하고 있는데 색체와 음향, 동작 등으로 구성된 공감각적인 영상에 의존하게 됩니다.
영화매체의 특성이 유발하는 독측한 수용상황은 다른 매체에서는 발견하기 어려운 특수한 심리적 상태를 만들어 줍니다.
영화의 관람은 일반적으로 어떤 환상도 쉽게 주입될 수 있는 분위기 하에서 진행되며 관객의 활동은 오로지 보고 듣는 데만 매몰되게 됩니다.

자연언어랑 사전적 의미로, 인간이 일상적으로 사용하고 있는 언어 그 자체를 의미합니다.
세상에는 수많은 인종이 있고 수많은 언어가 있습니다. 

이렇게 자연언어와 영화언어의 유사성은 '목적성'이라고 생각합니다.
둘다 의도한 바가 있고 그러한 의도한 바를 이끌어 내기 위해서 무단히 노력합니다.




3. 본교재 사진에서 언급된 영화 한 편을 자유롭게 선정하여, 해당 영화의 특정 장면
에서 주요한 형식적 특징을 찾아내고 그것이 전달하는 의미에 대해 분석하시오. 
(20점)

포레스트 검프 특정 장면에 대한 형식적 특징
-> 케네디 대통령의 영상을 분리해 낸 다음에 모핑 기술을 이용해 케네디 대통령과 주인공 포레스트 검프가 악수하는 장면을 연출해
컴퓨터 그래픽의 영역을 더욱 확장시켜 나갔다.

국회의사당 앞에 많은 사람들이 있는 모습을 컴퓨터 그래픽을 통해서 엄청나게 많은 사람들을 표현하는 것은
현재 시대를 생각해보면 큰 일은 아니라고 생각하지만
그 당시엔 엄청난 
하이퍼리얼리즘